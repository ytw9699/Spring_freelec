buildscript {
    ext {/*ext는 전역변수를 설정한다는 의미*/
        springBootVersion = '2.1.9.RELEASE'
    }
    repositories {
        mavenCentral()
        jcenter()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
    }
}

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'

group 'com.jojoldu.book'
version '1.0.4-SNAPSHOT-'+new Date().format("yyyyMMddHHmmss")
sourceCompatibility = 1.8

repositories {
    mavenCentral()
    jcenter()
}

dependencies {
    compile('org.springframework.boot:spring-boot-starter-web')
    compile('org.projectlombok:lombok')
    compile('org.springframework.boot:spring-boot-starter-data-jpa')
    compile('org.springframework.boot:spring-boot-starter-mustache')
    /*starter-mustache 덕분에 컨트롤러에서 문자열을 반환할 때 앞의 경로와 뒤의 파일 확장자는 자동으로 지정되어 View Resolver가 처리*/
    compile('com.h2database:h2')

    compile('org.springframework.boot:spring-boot-starter-oauth2-client')
    /*소셜 로그인 등 클라이언트 입장에서 소셜 기능 구현 시 필요한 의존성.*/
    compile('org.springframework.session:spring-session-jdbc')
    /*세션 저장소를 jdbc디비로 설정*/
    compile("org.mariadb.jdbc:mariadb-java-client")

    testCompile('org.springframework.boot:spring-boot-starter-test')
    testCompile("org.springframework.security:spring-security-test")
    /*임의로 인증된 사용자를 추가하여 API 만 테스트*/
    implementation 'com.google.firebase:firebase-admin:9.0.0'
    /*implementation("com.squareup.okhttp3:okhttp:4.2.2")*/
}
